@using WebApp.Helpers;
@model Entities.FormDTO.RegisterFormDTO

@{
    ViewBag.Title = "Register";
}

<h2 class="mb-3">Employee Registration</h2>
<form id="myForm" class="row g-3" method="post" novalidate>
    <div class="col-md-6">
        <label for="FirstName" class="form-label">First Name</label>
        <input type="text" class="form-control" id="FirstName" name="FirstName">
    </div>
    <div class="col-md-6">
        <label for="LastName" class="form-label">Last Name</label>
        <input type="text" class="form-control" id="LastName" name="LastName">
    </div>

    <div class="col-md-6">
        <label for="NIC" class="form-label">National Identity Card</label>
        <input type="text" class="form-control" id="NIC" name="NIC" onkeyup="this.value = this.value.toUpperCase();">
    </div>
    <div class="col-md-6">
        <label for="MobileNumber" class="form-label">Mobile Phone</label>
        <input type="text" class="form-control" id="MobileNumber" name="MobileNumber">
    </div>

    <div class="col-md-4">
        <label for="Username" class="form-label">Username</label>
        <input type="text" class="form-control" id="Username" name="Username">
    </div>
    <div class="col-md-4">
        <label for="Email" class="form-label">Email</label>
        <input type="email" class="form-control" id="Email" name="Email">
    </div>

    <div class="col-md-4">
        <label for="Email" class="form-label">Date of Birth</label>
        <input type="date" class="form-control" id="DOB" name="DOB">
    </div>

    <div class="col-md-6">
        <label for="Pass1" class="form-label">Password</label>
        <input type="password" class="form-control" id="Pass1" name="Pass1">
    </div>
    <div class="col-md-6">
        <label for="Pass2" class="form-label">Confirm Password</label>
        <input type="password" class="form-control" id="Pass2" name="Pass2">
    </div>

    <div class="col-md-6">
        <label for="Manager" class="form-label">Manager</label>
        <select class="form-select" id="ManagerId" name="ManagerId" aria-label="Default select example">
            <option value="">Select Manager</option>
            @foreach (var Manager in ViewBag.Managers)
            {
                <option value="@Manager.UserId">@Manager.FirstName @Manager.LastName</option>
            }
        </select>
    </div>
    <div class="col-md-6">
        <label for="Department" class="form-label">Department</label>
        <select class="form-select" id="DepartmentId" name="DepartmentId" aria-label="Default select example">
            <option value="-1">None</option>
            @foreach (var Department in ViewBag.Departments)
            {
                <option value="@Department.DepartmentId">@Department.Name</option>
            }
        </select>
    </div>


    <div class="col-12 mt-3">
        <button type="submit" class="btn btn-primary">Register</button>
    </div>
</form>

@section Scripts {
    <script type="text/javascript">
        $("#myForm").validate({
            errorClass: "is-invalid",
            validClass: "is-valid",
            errorPlacement: function (error, element) {
                error.insertAfter(element);
                element.next().addClass("invalid-feedback")
            },
            errorElement: 'div',

            rules: {
                FirstName: { required: true },
                LastName: { required: true },
                Username: {
                    required: true,
                    remote: {
                        url: "/User/UsernameCheck",
                        type: "post"
                    }
                },
                Email: {
                    required: true,
                    remote: {
                        url: "/User/EmailCheck",
                        type: "post"
                    }
                },
                NIC: {
                    required: true,
                    pattern: "^.{1}[0-9]{6}.{7}$",
                    remote: {
                        url: "/User/NicCheck",
                        type: "post"
                    }
                },
                DOB: { required: true },
                MobileNumber: { required: true },
                ManagerId: { required: true },
                DepartmentId: { required: true },
                Pass1: {
                    required: true,
                    minlength: 5
                },
                Pass2: {
                    required: true,
                    minlength: 5,
                    equalTo: "#Pass1"
                }
            },
            messages: {
                UserId: {
                    remote: "Username already in use!"
                }
            },
            submitHandler: handlePost
        });


        function handlePost() {
            let form_data = $("#myForm").serialize();
            $.ajax({
                url: "/user/RegisterPost",
                type: "POST",
                data: form_data
            }).done(function (response) {
                console.log(response);

                Swal.fire({
                    title: "You are successfully registered!",
                    showCancelButton: true,
                    confirmButtonText: "Login",
                    icon: "success",
                    timer: 2000
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    window.location.href = "/User/Login";
                    if (result.isConfirmed) {
                        //window.location.href = "/User/Login";
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        $("#myForm").trigger("reset");
                    }
                });

            }).fail(function () {
                alert("Please Contact Admin");
            });
        }
    </script>
}