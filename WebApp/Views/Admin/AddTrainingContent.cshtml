@{
    ViewBag.Title = "Add Training Content";
    ViewBag.PageTag = "train-add";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>@ViewBag.Title</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">General Form</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-6">
                    <!-- general form elements -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Training Details</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        <form id="myForm" method="post">
                            <div class="card-body">
                                <div class="form-group">
                                    <label for="name">Name</label>
                                    <input type="text" class="form-control" id="Name" name="Name" placeholder="Enter Name">
                                </div>

                                <div class="form-group">
                                    <label for="description">Description</label>
                                    <textarea class="form-control" rows="15" id="Description" name="Description" placeholder="Enter Description"></textarea>
                                </div>


                            </div>
                            <!-- /.card-body -->

                            <div class="card-footer">
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="col-md-6">
                    <!-- Form Element sizes -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Upload Files</h3>
                        </div>
                        <div class="card-body">
                            <div class="form-group claro">
                                <div id="fileUploader"></div>
                                <ul id="fileList"></ul>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts {

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/dijit@1.14.2/themes/claro/claro.min.css">
    <script src="https://cdn.jsdelivr.net/npm/dojo@1.14.2/dojo.js"></script>

    <script type="text/javascript">
        require(["dojox/form/Uploader", "dojo/dom", "dojo/on", "dojo/domReady!"],
            function (Uploader, dom, on) {
                var uploader = new Uploader({
                    label: "Select Files",
                    multiple: true,
                    accept: ".jpg, .jpeg, .png, .pdf, .doc, .docx",
                    id: "fileUploaderWidget"
                }, "fileUploader");

                // Event listener for when files are selected
                on(uploader, "change", function (files) {
                    // Clear existing list
                    dom.byId("fileList").innerHTML = "";

                    // Display files as a list
                    files.forEach(function (file) {
                        var li = document.createElement("li");
                        li.textContent = file.name;
                        dom.byId("fileList").appendChild(li);
                    });
                });
                uploader.startup();
            });
    </script>


    <script type="text/javascript">
        var trainingId = @ViewBag.trainingId;
        $("#myForm").validate({
            errorClass: "is-invalid",
            validClass: "is-valid",
            errorPlacement: function (error, element) {
                error.insertAfter(element);
                element.next().addClass("invalid-feedback")
            },
            errorElement: 'div',

            rules: {
                Name: { required: true },
                Description: { required: true }

            },
            submitHandler: upload
        });

        function upload() {
            $('.loading-mask').show();
            var formData = new FormData();

            formData.append("TrainingId", trainingId);
            formData.append("Name", $('#Name').val());
            formData.append("Description", $('#Description').val());


            var inputFiles = dijit.byId("fileUploaderWidget")._files;

            Array.from(inputFiles).forEach(function (file) {
                formData.append("Files", file);
            });

            $.ajax({
                url: '/Training/AddContentPost', // replace with your server endpoint
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            percentComplete = parseInt(percentComplete * 100);
                            console.log(percentComplete);

                            if (percentComplete === 100) {
                                // Handle the completion of the upload
                            }
                        }
                    }, false);

                    return xhr;
                },
                success: function (response) {
                    $('.loading-mask').hide();
                    Swal.fire({
                        icon: 'success',
                        title: 'Content Added!',
                        showConfirmButton: false,
                        timer: 2000
                    }).then(() => {
                        window.location.href = "/Training/View/" + trainingId;
                    });
                },
                error: function (response) {
                    $('.loading-mask').hide();
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Contact Admin!',
                    });
                }
            });

        }

    </script>
}